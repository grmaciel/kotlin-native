{"version":3,"file":"common-js.js","sources":["../../../../src/main/kotlin/com/gilson/chapter/DateTime.kt","../../../../../common/src/main/kotlin/com/gilson/chapter/model/WordOfTheDay.kt","../../../../../common/src/main/kotlin/com/gilson/chapter/repository/WordOfTheDayInMemoryRepository.kt","../../../../../common/src/main/kotlin/com/gilson/chapter/usecase/WordUseCase.kt","../../../../../common/src/main/kotlin/com/gilson/chapter/viewmodel/WordOfTheDayViewModel.kt"],"sourcesContent":["package com.gilson.chapter\n\nactual class DateTime {\n    actual fun formatDate(): String {\n        return js(\"new Date().toString()\");\n    }    \n}","package com.gilson.chapter.model\n\n/**\n * Created by gilsonmaciel on 4/9/18.\n */\ndata class WordOfTheDay(val day: String, val word: String, val description: String)","package com.gilson.chapter.repository\n\n/**\n * Created by gilsonmaciel on 4/9/18.\n */\nclass WordOfTheDayInMemoryRepository : WordRepository {\n    override fun wordOfTheDay(): Pair<String, String> {\n        return Pair(\"Maladroit\", \"Lacking skill, cleverness, or resourcefulness in handling situations\")\n    }\n}","package com.gilson.chapter.usecase\n\nimport com.gilson.chapter.DateTime\nimport com.gilson.chapter.model.WordOfTheDay\nimport com.gilson.chapter.repository.WordOfTheDayInMemoryRepository\n\n/**\n * Created by gilsonmaciel on 4/9/18.\n */\nclass WordUseCase(val dateTime: DateTime) {\n\n    private val repository = WordOfTheDayInMemoryRepository()\n\n    fun wordOfTheDay(success: (WordOfTheDay) -> Unit, error: () -> Unit) {\n        try {\n            val word = repository.wordOfTheDay()\n            success(WordOfTheDay(dateTime.formatDate(), word.first, word.second))\n        } catch (ex: Exception) {\n            error()\n        }\n    }\n}","package com.gilson.chapter.viewmodel\n\nimport com.gilson.chapter.model.WordOfTheDay\nimport com.gilson.chapter.usecase.WordUseCase\n\n/**\n * Created by gilsonmaciel on 4/10/18.\n */\nclass WordOfTheDayViewModel(val useCase: WordUseCase) {\n    fun retrieveWord(success: (WordOfTheDay) -> Unit, error: () -> Unit) {\n        useCase.wordOfTheDay(success, error)\n    }\n}"],"names":[],"mappings":";;;;;;;EAEA,C;;IAEQ,OAAE,CAAV,IAAI,IAAJ,EAAU,UAAK,E;EACX,C;;;ICAoB,c;IAAiB,gB;IAAkB,8B;EAApC,C;;;IAAC,e;EAHxB,C;;IAGyC,gB;EAHzC,C;;IAG2D,uB;EAH3D,C;;IAAA,wBAGwB,+BAHxB,EAGyC,kCAHzC,EAG2D,uDAH3D,C;EAAA,C;;IAAA,OAGwB,+CAHxB,IAGyC,sCAHzC,KAG2D,oDAH3D,O;EAAA,C;;IAAA,c;IAGwB,oD;IAAiB,qD;IAAkB,4D;IAH3D,a;EAAA,C;;IAAA,4IAGwB,kCAHxB,IAGyC,oCAHzC,IAG2D,kDAH3D,I;EAAA,C;;ECAA,C;;IAKQ,OAAO,SAAK,WAAL,EAAkB,sEAAlB,C;EACX,C;;;;;;ICCc,wB;IAEd,oBAAyB,oC;EAFZ,C;;;MAML,WAAW,iBAAW,e;MACtB,QAAQ,iBAAa,aAAS,aAAtB,EAAoC,IAAK,MAAzC,EAAgD,IAAK,OAArD,CAAR,C;;;MACF,iC;QACE,O;;;QAJJ,Q;;EAMJ,C;;;ICZwB,sB;EAAD,C;;IAEnB,YAAQ,sBAAa,OAAb,EAAsB,KAAtB,C;EACZ,C;;;;;;;;;;;;;;;;;"}